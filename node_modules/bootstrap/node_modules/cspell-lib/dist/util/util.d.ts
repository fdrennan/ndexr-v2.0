export declare const uniqueFn: typeof uniqueFilterFnGenerator;
export declare function uniqueFilterFnGenerator<T>(): (v: T) => boolean;
export declare function uniqueFilterFnGenerator<T, U>(extractFn: (v: T) => U): (v: T) => boolean;
export declare function unique<T>(src: T[]): T[];
/**
 * Delete all `undefined` fields from an object.
 * @param src - object to be cleaned
 */
export declare function clean<T>(src: T): T;
/**
 * Creates a scan function that can be used in a map function.
 */
export declare function scanMap<T>(accFn: (acc: T, value: T) => T, init?: T): (value: T) => T;
export declare function scanMap<T, U>(accFn: (acc: U, value: T) => U, init: U): (value: T) => U;
export declare function isDefined<T>(v: T | undefined): v is T;
export declare function flattenIterable<T>(values: Iterable<Iterable<T>> | T[][]): Iterable<T>;
export declare function flatten<T>(values: Iterable<Iterable<T>> | T[][]): T[];
export declare function asyncIterableToArray<T>(iter: Iterable<T> | AsyncIterable<T>): Promise<Awaited<T>[]>;
//# sourceMappingURL=util.d.ts.map